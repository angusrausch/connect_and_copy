name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    container:
      image: docker:24.0.5-cli
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_REPO: ${{ vars.DOCKER_REPO }}

    steps:
      - name: Install dependencies
        run: apk add --no-cache curl jq

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest SemVer patch tag
        id: get_tag
        run: |
          set -e
          REPO_URL="https://hub.docker.com/v2/repositories/${DOCKER_USERNAME}/${DOCKER_REPO}/tags?page_size=100"
          echo "Fetching tags from: $REPO_URL"

          RESPONSE=$(curl -s "$REPO_URL")
          TAGS=$(echo "$RESPONSE" | jq -r '.results[]?.name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$')

          if [ -z "$TAGS" ]; then
            NEXT_TAG="0.0.1"
          else
            LATEST=$(echo "$TAGS" | sort -V | tail -n 1)
            IFS='.'
            set -- $LATEST
            MAJOR=$1
            MINOR=$2
            PATCH=$3

            PATCH=$((PATCH + 1))
            NEXT_TAG="${MAJOR}.${MINOR}.${PATCH}"
          fi

          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG=${{ steps.get_tag.outputs.NEXT_TAG }}
          echo "Building Docker image with tag: ${{ env.DOCKER_USERNAME }}/connect_and_copy:$IMAGE_TAG"
          docker build -t ${{ env.DOCKER_USERNAME }}/connect_and_copy:$IMAGE_TAG .
          docker tag ${{ env.DOCKER_USERNAME }}/connect_and_copy:$IMAGE_TAG ${{ env.DOCKER_USERNAME }}/connect_and_copy:latest

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: |
          IMAGE_TAG=${{ steps.get_tag.outputs.NEXT_TAG }}
          echo "Pushing Docker image with tag: ${{ env.DOCKER_USERNAME }}/connect_and_copy:$IMAGE_TAG"
          docker push ${{ env.DOCKER_USERNAME }}/connect_and_copy:$IMAGE_TAG
          docker push ${{ env.DOCKER_USERNAME }}/connect_and_copy:latest
